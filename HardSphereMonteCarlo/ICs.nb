(*Call with: wolframscript -file ICs.nb *)

num=5000;
BoxSize=150;
ParticleRadius=1;
ThermalizeSteps=10;
StepSize=0.1;
PrintData=False;
MCSteps=10000;
alpha = 5000;
mass=1;
beta=1;


initdata=Last[ResourceFunction[
 "HardSphereSimulation"][<|"Positions" -> "RandomNonOverlapping", "Velocities" -> RandomPoint[Ball[{0, 0}, 1], num], "BoxSize" -> BoxSize, "ParticleRadius" -> ParticleRadius, "Steps" -> ThermalizeSteps, "StepSize" -> StepSize, "BoundaryCondition" -> "Reflecting", "Output" -> "PositionsByTime"|>]];  
Export["x.bin", initdata[[All,1]],"Real64"]; 
Export["y.bin", initdata[[All,2]],"Real64"]; 
If[PrintData==True,Do[Print[initdata[[i]]],{i,Length[initdata]}]];

particles=RandomChoice[Range[0,num-1,1],MCSteps];
Export["particles.bin",particles,"Integer32"];
If[PrintData==True,Print[particles]];


MaxwellBoltzmannDistribution[m_, beta_] := BinormalDistribution[{1/Sqrt[m beta], 1/Sqrt[m beta]}, 0];
trialsteps=RandomVariate[MaxwellBoltzmannDistribution[mass,beta],alpha*MCSteps];
Export["vx.bin", trialsteps[[All,1]],"Real64"];
Export["vy.bin", trialsteps[[All,2]],"Real64"];
If[PrintData==True,Print[Total[Flatten[trialsteps]]]];
